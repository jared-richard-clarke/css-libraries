// width-layout: generates all width utilities.

@mixin width-layout {
    @include width;
    @include min-width;
    @include max-width;
}

// width: generates a sequence of width utilities.
// @include width; -> .w-auto { width: auto; } ...

@mixin width {
    $SCALARS: (
        auto: auto,
        screen: 100vw,
        min: min-content,
        max: max-content,
        1: 8.333333%,
        2: 16.666666%,
        3: 25%,
        4: 33.333333%,
        5: 41.666666%,
        6: 50%,
        7: 58.333333%,
        8: 66.666666%,
        9: 75%,
        10: 83.333333%,
        11: 91.666666%,
        12: 100%,
    );
    @each $key, $value in $SCALARS {
        .w-#{$key} {
            width: $value;
        }
    }
}

// min-width: generates a sequence of min-width utilities.
// @include min-width; -> .min-w-full { min-width: 100%; } ...

@mixin min-width {
    $SCALARS: (
        0: 0px,
        full: 100%,
        min: min-content,
        max: max-content
    );
    @each $key, $value in $SCALARS {
        .min-w-#{$key} {
            min-width: $value;
        }
    }
}

// max-width: generates a sequence of max-width utilities.
// @include max-width; -> .max-w-lg { max-width: 32rem; } ...

@mixin max-width {
    $SCALARS: (
        full: 100%,
        min: min-content,
        max: max-content,
        xs: 20rem,
        sm: 24rem,
        md: 28rem,
        lg: 32rem,
        xl: 36rem,
        2xl: 42rem,
        3xl: 48rem,
        4xl: 56rem,
        5xl: 64rem,
        6xl: 72rem,
        7xl: 80rem
    );
    @each $key, $value in $SCALARS {
        .max-w-#{$key} {
            max-width: $value;
        }
    }
}
